{"version":3,"sources":["components/Logo.jsx","components/Navbar.jsx","components/HomePage.jsx","components/FightPage.jsx","components/CreatePage.jsx","components/Sidebar.jsx","components/NamesRankings.jsx","components/JokesRankings.jsx","components/RankingsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Logo","props","onClick","onButton","className","color","Navbar","useState","items","showSideBar","map","item","HomePage","FightPage","jokes","setJokes","isLoaded","setIsLoaded","myFunc","a","console","log","fetch","resp","json","pickWinner","index","headers","mode","method","body","JSON","stringify","useEffect","class","CreatePage","the_name","setName","the_joke","setJoke","send_joke","data_to_send","name","joke","value","onChange","e","target","type","placeholder","rows","Sidebar","NamesRankings","setItems","response","helperFunction","wins","JokesRankings","RankingsPage","page","setPage","clicked","App","setShowSideBar","isLoggedIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8ccceb7.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Logo = (props) => {\n    return(<div onClick={() => props.onButton(\"Home\")} className={props.color + \" logo color2 click-color1\"}><div className=\"hover-spin logo\"><h3>J</h3></div></div>);\n}\n\nexport default Logo;","import React, { useState } from 'react';\nimport Logo from './Logo';\n\nconst Navbar = (props) => {\n\n    const [items, setItems] = useState(['Fight', 'Create', 'Rankings']);\n\n    return (\n        <div className={\"navbar color2 shadow\" + (props.showSideBar ? \"\" : \"-alt\")}>\n            {props.showSideBar || <Logo color=\"hover-color2 color2\" onButton={props.onButton}/>}\n            {items.map((item) => {\n                return <div onClick={() => props.onButton(item)} className=\"navbar-item  hover-color3 click-color1\"><span className=\"disappear2\">{item}</span></div>\n            })}\n        </div>\n    );\n}\n\nexport default Navbar;","import React, { useState } from 'react';\n\nconst HomePage = () => {\n    return(<div className=\"text-center\">\n        <h1>Joke Wars</h1>\n        <h3>where the most popular joke wins.</h3>\n    </div>)\n}\n\nexport default HomePage;","import React, { useState, useEffect } from 'react';\n\nconst FightPage = () => {\n    const [jokes, setJokes] = useState();\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const myFunc = async () => {\n        try {\n            console.log(\"hello\");\n            const resp = await fetch('http://localhost:5000/war/jokes');\n            console.log(\"hello1\");\n            setJokes(await resp.json());\n            console.log(\"hello2\");\n            setIsLoaded(true);\n        }\n        catch(error) {\n            console.log(\"error occurred: \" + error)\n        }\n    }\n\n    const pickWinner = async (index) => {\n        setIsLoaded(false);\n        try {\n            const response = await fetch('http://localhost:5000/war/winner', {\n                headers: {'Content-Type': 'application/json'},\n                mode: 'cors',    \n                method: 'POST',\n                body: JSON.stringify(jokes[index])\n            });\n            console.log('we made it');\n            myFunc();\n        }\n        catch(error) {\n            console.log('error occurred while posting winner');\n        }\n    }\n\n    useEffect(() => {\n        myFunc();\n    }, []);\n\n    return(<div className=\"text-center body\">\n        <h2>Fight</h2>\n        <div className=\"card-section color2-grad\">\n            { isLoaded && <div className=\"wrapper-1500 card-row\">\n                <div className=\"card-square color1 hover-outline2 round\">\n                    <div className=\"top-three\">\n                        <h2 className=\"text-center\">Joke 1:</h2>\n                        { jokes[0]['joke'] }\n                        <br /><br />\n                        <p className=\"text-center\">By { jokes[0]['name'] }</p>\n                    </div>\n                    <div className=\"bottom-one text-center\">\n                        <button className=\"btn-med hover-outline2 round color3 hover-color2 click-color1\" onClick={() => pickWinner(0)}>Pick this one</button>\n                    </div>\n                </div>\n                <div className=\"color1 round wrapper-flex-center card-normal text-center wrapper-flex card-mini\"><h1>VS</h1></div>\n                <div className=\"card-square color1 hover-outline2 round\">\n                    <div className=\"top-three\">\n                        <h2 className=\"text-center\">Joke 2:</h2>\n                        { jokes[1]['joke'] }\n                        <br /><br />\n                        <p class=\"text-center\">By { jokes[1]['name'] }</p>\n                    </div>\n                    <div className=\"bottom-one text-center\">\n                        <button className=\"btn-med color3 hover-outline2 hover-color2 click-color1 round\" onClick={() => pickWinner(1)}>Pick this one</button>\n                    </div>\n                </div>\n            </div> }\n        {isLoaded || <h3 className=\"text-center\">Loading <div className=\"spin text-center\">.</div></h3>}\n\n        </div>\n    </div>)\n}\n\nexport default FightPage;","import React, { useState } from 'react';\n\nconst CreatePage = () => {\n    const [the_name, setName] = useState('');\n    const [the_joke, setJoke] = useState('');\n\n\n    const send_joke = async () => {\n            try{\n                let data_to_send = JSON.stringify({\n                    name: the_name,\n                    joke: the_joke\n                });\n                setJoke('');\n                const response = await fetch('http://localhost:5000/post', {\n                    headers: {'Content-Type': 'application/json'},\n                    mode: 'cors',    \n                    method: 'POST',\n                    body: data_to_send\n                })\n            }\n            catch(error) {\n                console.log(\"error occurred\")\n            }\n    }\n        \n        // const response = await fetch(url, {\n        //     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        //     mode: 'cors', // no-cors, *cors, same-origin\n        //     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        //     credentials: 'same-origin', // include, *same-origin, omit\n        //     headers: {\n        //       'Content-Type': 'application/json'\n        //       // 'Content-Type': 'application/x-www-form-urlencoded',\n        //     },\n        //     redirect: 'follow', // manual, *follow, error\n        //     referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        //   });\n\n    return(<div className=\"text-center\">\n        <h2>Create</h2>\n        <div className=\"section\">\n            <div className=\"section text-left\">\n                <form className=\"wrapper-700\">\n                    <p className=\"form-text\">Joke:</p>\n                    <textarea value={the_joke} onChange={e => setJoke(e.target.value)} type=\"text\" placeholder=\"type joke here...\" rows=\"4\" className=\"round hover-outline\"/>\n                    <p className=\"form-text\">Name: </p>\n                    <input value={the_name} onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"enter name...\" className=\"round stretch hover-outline\" />\n                    <div className=\"wrapper-mtop text-center\">\n                        <button onClick={() => send_joke()} type=\"button\" className=\"round btn-med text-center hover-color3 click-color1 color2\">submit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default CreatePage;","import React, { Component } from 'react';\n\nconst Sidebar = (props) => {\n    console.log(props.items)\n    return(\n        <div className=\"navbar shadow wrapper-flex fade color2\">\n            {props.items.map((item) => {\n                return(<div onClick={() => props.onButton(item)} className=\"navbar-item hover-color3 click-color1\">&nbsp;<span className=\"disappear\">{item}</span></div>)\n            })}\n        </div>\n    )\n}\n\nexport default Sidebar;","import React, { useState, useEffect } from 'react';\n\nconst NamesRankings = () => {\n    const [items, setItems] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        const helperFunction = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/rankings/names');\n                setItems(await response.json());\n            }\n            catch(error) {\n                console.log('an error occured while fetching rankings');\n            }\n            setIsLoaded(true);\n\n        }\n\n        helperFunction();\n        // setItems([\n        //     {\n        //         name: 'ALFRED',\n        //         wins: 3,\n        //         losses: 2\n        //     },\n        //     {\n        //         name: 'NOT ALFRED',\n        //         wins: 2,\n        //         losses: 0\n        //     }\n        // ])\n    }, [])\n\n    return (<div className=\"wrapper-700 text-left\">\n        <h4 className=\"text-center\">By Names</h4>\n        {isLoaded && \n        <ol>\n            {items.map((item) => { return(<li><div className=\"sections\">\n                <div className=\"section\">{item.name}</div>\n                <div className=\"section text-center\">{item.wins}</div>\n            </div></li>)})}\n        </ol>}\n        {isLoaded || <h3 className=\"text-center\">Loading <div className=\"spin text-center\">.</div></h3>}\n    </div>);\n}\n\nexport default NamesRankings;","import React, { useState, useEffect } from 'react';\n\nconst JokesRankings = () => {\n    const [items, setItems] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        const helperFunction = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/rankings/jokes');\n                setItems(await response.json());\n            }\n            catch(error) {\n                console.log('an error occured while fetching rankings');\n            }\n            setIsLoaded(true);\n\n        }\n\n        helperFunction();\n    }, [])\n\n    return (<div className=\"wrapper-700 text-left\">\n        <h4 className=\"text-center\">By Jokes</h4>\n        {isLoaded && \n        <ol>\n            {items.map((item) => { return(<li><div className=\"sections\">\n                <div className=\"section\">{item.joke}</div>\n                <div className=\"section text-center\">{item.wins}</div>\n            </div></li>)})}\n        </ol>}\n        {isLoaded || <h3 className=\"text-center\">Loading <div className=\"spin text-center\">.</div></h3>}\n    </div>);\n}\n\nexport default JokesRankings;","import React, { useState, Fragment } from 'react';\nimport Sidebar from './Sidebar';\nimport NamesRankings from './NamesRankings';\nimport JokesRankings from './JokesRankings';\n\nconst RankingsPage = () => {\n    const [page, setPage] = useState('Names');\n    const onButton = (clicked) => {\n        setPage(clicked)\n    }\n\n    return(\n        <Fragment>\n            <Sidebar items={['Names', 'Jokes']} onButton={onButton}></Sidebar>\n            <div className=\"text-center\">\n                <h2>Rankings</h2>\n                {page === 'Names' && <NamesRankings/>}\n                {page === 'Jokes' && <JokesRankings/>}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default RankingsPage;","import './App.css';\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Logo from './components/Logo'\nimport HomePage from './components/HomePage'\nimport FightPage from './components/FightPage'\nimport CreatePage from './components/CreatePage'\nimport RankingsPage from './components/RankingsPage'\n\nfunction App() {\n  const [showSideBar, setShowSideBar] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [page, setPage] = useState('Home');\n  const onClick = (clicked) => {\n    if(clicked === 'Rankings') {\n      setShowSideBar(true);\n    }\n    else {\n      setShowSideBar(false);\n    }\n    setPage(clicked);\n  }\n\n  return (\n    <div className={\"has-top-bar color1 \" + (showSideBar && \"has-side-bar\")}>\n      {showSideBar && <div className=\"wrapper color2\"><Logo color=\"fade color3 hover-color3 shadow \" onButton={onClick}/></div>}\n      <Navbar onButton={onClick} isLoggedIn={isLoggedIn} showSideBar={showSideBar}/>\n      {page === 'Home' && <HomePage/>}\n      {page === 'Fight' && <FightPage/>}\n      {page === 'Create' && <CreatePage/>}\n      {page === 'Rankings' && <RankingsPage/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}